service: big-mouth
plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x

  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action: dynamodb:scan  
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants
    - Effect: "Allow"
      Action: execute-api:Invoke
      Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/*/GET/restaurants
    - Effect: "Allow"
      Action: kinesis:PutRecord
      Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order_events
    - Effect: "Allow"
      Action: sns:Publish
      Resource: 
        - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
        - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification
        
functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
          path: /
          method: get
    environment:
      restaurants_api: https://1k3vh5uqzl.execute-api.eu-west-1.amazonaws.com/dev/restaurants
      orders_api: https://1k3vh5uqzl.execute-api.eu-west-1.amazonaws.com/dev/orders
      cognito_user_pool_id: eu-west-1_XUJlg27NJ
      cognito_client_id: j931tvl2lem9fl2scjn2kj3f9
  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants/
          method: get
          authorizer: aws_iam
    environment:
      restaurant_table: restaurants
  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search
          method: post 
          authorizer: 
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/eu-west-1_XUJlg27NJ
    environment:
      restaurant_table: restaurants
  place-order:
    handler: functions/place-order.handler
    events: 
      - http:
          path: /orders
          method: post 
          authorizer: 
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/eu-west-1_XUJlg27NJ
    environment:
      order_events_stream: order_events   
  notify-restaurant:
    handler: functions/notify-restaurant.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order_events
    environment:
      order_events_stream: order_events
      restaurant_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
  accept-order: 
    handler: functions/accept-order.handler
    events:
      - http:
          path: /orders/accept
          method: post 
    environment:
      order_events_stream: order_events
  notify-user:
    handler: functions/notify-user.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order_events
    environment:
      order_events_stream: order_events
      user_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification
  fulfill-order:
    handler: functions/fulfill-order.handler
    events: 
      - http:
          path: /orders/complete
          method: post 
    environment:
      order_events_stream: order-events

resources:
  Resources:
    restaurantsTable:
      Type: AWS::DynamoDB::Table 
      Properties:
        TableName: restaurants 
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S 
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    orderEventsStream:
      Type: AWS::Kinesis::Stream 
      Properties:
        Name: order_events
        ShardCount: 1

    restaurantNotificationTopic:
      Type: AWS::SNS::Topic 
      Properties:
        DisplayName: restaurant-notification
        TopicName: restaurant-notification

    userNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: user-notification
        TopicName: user-notification